version: '3.8'

volumes:
  postgres: {}
  django_media: {}
  django_static: {}

services:
  backend:
    container_name: backend
    build: ./backend/
    entrypoint: sh -c "python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && gunicorn BFFs.wsgi --workers=5 -b 0.0.0.0:8000"
    volumes:
      - ./backend/django/:/app/
      - /etc/localtime:/etc/localtime:ro
      - django_media:/app/media/
      - django_static:/app/static/
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
    restart: always
  postgres:
    container_name: postgres
    image: postgres:14.5
    volumes:
      - postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=makebffs
      - POSTGRES_PASSWORD=makebffs
      - POSTGRES_DB=makebffsdb
      - POSTGRES_HOST=makebffsdb.cnkfzk6neq5d.ap-northeast-2.rds.amazonaws.com
      - POSTGRES_PORT=5432
    restart: always

  nginx:
    container_name : nginx
    image: nginx:1.23.2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - django_media:/app/media/
      - django_static:/app/static/
    depends_on:
      - backend
    restart: always
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - 5672:5672
      - 15672:15672 
    restart: always
  daphne:
    container_name: daphne
    build: ./backend/
    depends_on:
      - backend
      - postgres
      - redis
    volumes:
      - ./backend/django/:/app/
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    command: sh -c "daphne -v 2 -b 0.0.0.0 -p 8001 BFFs.asgi:application"

  django-cron:
    container_name: django-cron
    build: ./backend/  # Use the same build context as the backend service
    command: python manage.py runcrons  # Command to run Django cron
    volumes:
      - ./backend/django/:/app/
      - /etc/localtime:/etc/localtime:ro # host's timezone setting applied to the container
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    restart: always

  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend/
    depends_on:
      - backend
      - rabbitmq
    volumes:
      - ./backend/django/:/app/
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports: []
    command: sh -c "celery -A BFFs worker --loglevel=info -P eventlet"
  
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
      - 16379:16379
    restart: always
